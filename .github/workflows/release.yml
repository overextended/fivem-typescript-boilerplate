name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  create-release:
    name: Build and Create Tagged release
    runs-on: ubuntu-latest

    steps:
      - name: Install archive tools
        run: sudo apt install zip

      - name: Checkout source code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ github.event.repository.default_branch }}

      - name: Install pnpm
        uses: pnpm/action-setup@v4.0.0
        with:
          version: 9

      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Get variables
        id: get_vars
        run: |
          echo '::set-output name=SHORT_SHA::$(git rev-parse --short HEAD)'
          echo '::set-output name=DATE::$(date +'%D')'

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'pnpm'
          cache-dependency-path: 'pnpm-lock.yaml'

      - name: Install dependencies
        run: pnpm i --frozen-lockfile

      - name: Run build
        run: pnpm build ${{ env.RELEASE_VERSION }}

      - name: Bump package version
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          pnpm version ${{ github.ref_name }} --git-tag-version false

      - name: Update repository
        run: |
          git add .
          git commit -am '${{ github.ref_name }}'
          git push

      - name: Bundle files
        run: |
          zip -r ${{ github.event.repository.name }}.zip . -x "./.*" "./node_modules/*" "./scripts/*" "./src/*" "./web/*" "./tsconfig.json" "./pnpm-lock.yaml" "./package.json" "./eslint.config.js"

      - name: Create Release
        uses: 'marvinpinto/action-automatic-releases@v1.2.1'
        id: auto_release
        with:
          repo_token: '${{ secrets.GITHUB_TOKEN }}'
          title: '${{ env.RELEASE_VERSION }}'
          prerelease: false
          files: ${{ github.event.repository.name }}.zip

        env:
          CI: false
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
